name: pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:

  sonar:    
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Install Sonar Scanner
      shell: pwsh
      run: |
        New-Item -Path ./.sonar/scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    - name: Restore Dependencies
      run: dotnet restore
    - name: Build And Test
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"marcelocasteloio_ShopDemo" /o:"marcelocasteloio" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.coverage.exclusions="tst/**" /d:sonar.exclusions="tst/**"
        dotnet build --no-restore
        dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover ./tst/Tests.UnitTests/ShopDemo.Tests.UnitTests.csproj
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  multant-tests:
    runs-on: ubuntu-latest
    needs: sonar
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Install Stryker
      shell: pwsh
      run: |
        dotnet tool install -g dotnet-stryker
    - name: run-multant-test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      run: |
        cd ./tst/Tests.UnitTests
        dotnet stryker
        cd ../..

        $matches = Get-ChildItem -Path . -Filter "mutation-report.html" -Recurse | %{$_.FullName}
        if ($matches) {
            $firstMatch = $matches
            Write-Output "First match: $firstMatch"
        } else {
            Write-Output "No matches found."
        }
        echo "MUTANT_TEST_REPORT_PATH=$($firstMatch)" >> $GITHUB_ENV
    - name: Archive Multant Test
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: $MUTANT_TEST_REPORT_PATH
